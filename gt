#!/bin/bash


function _gt_add() {

    ALIAS=$1

    if [[ -f $CONFIG_DIR$ALIAS ]] ; then
        echo "Error: alias '$ALIAS' already exists."
        return 1
    fi

    if [[ "$ALIAS" == add || "$ALIAS" == 'remove' ||
            "$ALIAS" == 'info' || "$ALIAS" == 'list' ]] ; then
        echo "Error: aliases 'add', 'remove', 'info' and 'list' are forbidden."
        return 1
    fi

    if [[ ${ALIAS:0:1} == '.' ]] ; then
        echo "Error: aliases cannot start with '.'"
        return 1
    fi

    pwd > $CONFIG_DIR$ALIAS
}

function _gt_remove() {

    ALIAS=$1

    if [[ ! -f $CONFIG_DIR$ALIAS ]] ; then
        echo "Error: alias '$ALIAS' does not exist."
        return 1
    fi

    rm $CONFIG_DIR$ALIAS
}

function _gt_info() {

    ALIAS=$1

    if [[ ! -f $CONFIG_DIR$ALIAS ]] ; then
        echo "Error: alias '$ALIAS' does not exist."
        return 1
    fi

    read -r target_directory < $CONFIG_DIR$ALIAS
    echo "$ALIAS -> $target_directory"
}

function _gt_list() {

    for alias_i in $(ls $CONFIG_DIR) ; do
        read -r target_directory < $CONFIG_DIR$alias_i
        echo "$alias_i -> $target_directory"
    done

    return 0
}

function _gt_config() {

    KEY=$1
    VALUE=$2

    if [[ "$KEY" == 'tmux' ]] ; then
        if [[ "$VALUE" != 'on' && "$VALUE" != 'off' ]] ; then
            echo 'Usage: gt config tmux {on, off}'
            return 1
        fi

        config=$(cat $CONFIG_DIR.settings.yml)
        config=$(echo $config | sed -r "s/tmux: (off|on)/tmux: $VALUE/")
        echo $config > $CONFIG_DIR.settings.yml

        return 0
    fi

    return 0
}

function _gt_tmux() {

    config_line=$(cat $CONFIG_DIR.settings.yml | grep '^tmux: \(on\|off\)')

    if [[ $config_line == '' ]] ; then
        echo 'Error: no tmux configuration set'
        return 0
    fi

    echo $config_line | grep 'on' &> /dev/null

    if [[ $? -eq 0 ]] ; then
        return 1
    else
        return 0
    fi
}

function _gt_goto() {

    ALIAS=$1

    if [[ ! -f $CONFIG_DIR$ALIAS ]] ; then
        echo "Error: alias '$ALIAS' does not exist."
        return 1
    fi

    read -r target_directory < $CONFIG_DIR$ALIAS

    _gt_tmux
    if [[ $? -eq 1 ]] ; then

        tmux has-session -t $ALIAS &> /dev/null

        if [[ $? -ne 0 ]] ; then
            (cd $target_directory; tmux new -s $ALIAS -d)
        fi

        if [[ -n $TMUX ]] ; then
            tmux switch-client -t $ALIAS
        else
            tmux attach -t $ALIAS
        fi

    else
        cd $target_directory
    fi
}


# If no configuration directory set, create one

CONFIG_DIR_FILE=$(dirname "$0")'/.CONFIG'

if [[ ! -f $CONFIG_DIR_FILE ]] ; then

    echo -ne 'Choose gt config directory \e[0;37m(~/.config/gt)\e[0m: '

    read CONFIG_DIR
    if [[ "$CONFIG_DIR" == '' ]] ; then
        CONFIG_DIR=~/.config/gt
    fi
    CONFIG_DIR=${CONFIG_DIR/#\~/$HOME}
    CONFIG_DIR=${CONFIG_DIR%/}'/'

    mkdir -p $CONFIG_DIR &> /dev/null
    touch $CONFIG_DIR.settings.yml &> /dev/null
    if [[ $? -ne 0 ]] ; then
        echo "Unable to use configuration directory $CONFIG_DIR"
        return 1
    fi

    echo $CONFIG_DIR > $CONFIG_DIR_FILE
    echo 'tmux: off' > $CONFIG_DIR.settings.yml

else
    read -r CONFIG_DIR < $CONFIG_DIR_FILE
fi


# Parse command and check usage

if [[ $# -eq 0 ]] ; then

    echo 'Usage: gt add ALIAS'
    echo 'Usage: gt remove ALIAS'
    echo 'Usage: gt info ALIAS'
    echo ''
    echo 'Usage: gt list'
    echo ''
    echo 'Usage: gt config KEY VALUE'
    echo ''
    echo 'Usage: gt ALIAS'

    return 1

elif [[ $1 == 'add' ]] ; then

    if [[ $# -ne 2 ]] ; then
        echo 'Usage: gt add ALIAS'
        return 1
    fi

    _gt_add $2

elif [[ $1 == 'remove' ]] ; then

    if [[ $# -ne 2 ]] ; then
        echo 'Usage: gt remove ALIAS'
        return 1
    fi

    _gt_remove $2

elif [[ $1 == 'info' ]] ; then

    if [[ $# -ne 2 ]] ; then
        echo 'Usage: gt info ALIAS'
        return 1
    fi

    _gt_info $2

elif [[ $1 == 'list' ]] ; then

    if [[ $# -ne 1 ]] ; then
        echo 'Usage: gt list'
        return 1
    fi

    _gt_list

elif [[ $1 == 'config' ]] ; then

    if [[ $# -ne 3 || ( "$2" != 'tmux' ) ]] ; then
        echo 'Usage: gt config KEY VALUE'
        echo ''
        echo 'KEYS'
        echo '    tmux: {on, off}'
        echo '          whether to start a tmux session upon goto'
        return 1
    fi

    _gt_config $2 $3

elif [[ $# -eq 1 ]] ; then

    _gt_goto $1

fi
